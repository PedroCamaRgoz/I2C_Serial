

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 18 00:43:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	functab,global,class=ENTRY,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371                           
   372 ;; Function _i2cRead is unused but had its address taken
   373  0000                     
   374 ;; Function _i2cAck is unused but had its address taken
   375  0000                     
   376 ;; Function _i2cNack is unused but had its address taken
   377  0000                     
   378                           	psect	idataBANK0
   379  063D                     __pidataBANK0:
   380                           
   381                           ;initializer for _i2c
   382  063D  3401               	retlw	low (fp__i2cInit-fpbase)
   383  063E  3404               	retlw	low (fp__msspWait-fpbase)
   384  063F  3407               	retlw	low (fp__i2cStar-fpbase)
   385  0640  3410               	retlw	low (fp__i2cWrite-fpbase)
   386  0641  3400               	retlw	0
   387  0642  3400               	retlw	0
   388  0643  3400               	retlw	0
   389  0644  340A               	retlw	low (fp__i2cStop-fpbase)
   390  0645  340D               	retlw	low (fp__i2cRestart-fpbase)
   391  0013                     _SSPBUF	set	19
   392  0014                     _SSPCONbits	set	20
   393  00A5                     _SSPEN	set	165
   394  0063                     _SSPIF	set	99
   395  0094                     _SSPSTATbits	set	148
   396  0091                     _SSPCON2bits	set	145
   397  0094                     _SSPSTAT	set	148
   398  0093                     _SSPADD	set	147
   399  0091                     _SSPCON2	set	145
   400  0087                     _TRISCbits	set	135
   401  0489                     _RSEN	set	1161
   402  048A                     _PEN	set	1162
   403  048C                     _ACKEN	set	1164
   404  048D                     _ACKDT	set	1165
   405  048B                     _RCEN	set	1163
   406  0488                     _SEN	set	1160
   407                           
   408                           	psect	cinit
   409  07EE                     start_initialization:	
   410                           ; #config settings
   411                           
   412  07EE                     __initialization:
   413                           
   414                           ; Initialize objects allocated to BANK0
   415  07EE  1383               	bcf	3,7	;select IRP bank0
   416  07EF  303E               	movlw	low (__pdataBANK0+9)
   417  07F0  00FD               	movwf	btemp+-1
   418  07F1  3006               	movlw	high __pidataBANK0
   419  07F2  00FE               	movwf	btemp
   420  07F3  303D               	movlw	low __pidataBANK0
   421  07F4  00FF               	movwf	btemp+1
   422  07F5  3035               	movlw	low __pdataBANK0
   423  07F6  0084               	movwf	4
   424  07F7  120A  118A  2671  120A  118A  	fcall	init_ram0
   425  07FC                     end_of_initialization:	
   426                           ;End of C runtime variable initialization code
   427                           
   428  07FC                     __end_of__initialization:
   429  07FC  0183               	clrf	3
   430  07FD  120A  118A  2EB1   	ljmp	_main	;jump to C main() function
   431                           
   432                           	psect	dataBANK0
   433  0035                     __pdataBANK0:
   434  0035                     _i2c:
   435  0035                     	ds	9
   436                           
   437                           	psect	inittext
   438  066D                     init_fetch0:	
   439                           ;	Called with low address in FSR and high address in W
   440                           
   441  066D  087E               	movf	btemp,w
   442  066E  008A               	movwf	10
   443  066F  087F               	movf	btemp+1,w
   444  0670  0082               	movwf	2
   445  0671                     init_ram0:	
   446                           ;Called with:
   447                           ;	high address of idata address in btemp 
   448                           ;	low address of idata address in btemp+1 
   449                           ;	low address of data in FSR
   450                           ;	high address + 1 of data in btemp-1
   451                           
   452  0671  120A  118A  266D  120A  118A  	fcall	init_fetch0
   453  0676  0080               	movwf	0
   454  0677  0A84               	incf	4,f
   455  0678  0804               	movf	4,w
   456  0679  067D               	xorwf	btemp+-1,w
   457  067A  1903               	btfsc	3,2
   458  067B  3400               	retlw	0
   459  067C  0AFF               	incf	btemp+1,f
   460  067D  1903               	btfsc	3,2
   461  067E  0AFE               	incf	btemp,f
   462  067F  2E71               	goto	init_ram0
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:
   466  0070                     ?_delay:
   467  0070                     ?_msspWait:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_msspWait:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_i2cStar:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_i2cStar:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_i2cWrite:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_i2cStop:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_i2cStop:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_i2cRestart:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ??_i2cRestart:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_main:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_i2cIdleWait:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ??_i2cIdleWait:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?___lmul:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     i2cWrite@dat:	
   507                           ; 4 bytes @ 0x0
   508                           
   509  0070                     delay@t:	
   510                           ; 2 bytes @ 0x0
   511                           
   512  0070                     ___lmul@multiplier:	
   513                           ; 2 bytes @ 0x0
   514                           
   515                           
   516                           ; 4 bytes @ 0x0
   517  0070                     	ds	2
   518  0072                     ??_delay:
   519  0072                     ??_i2cWrite:	
   520                           ; 1 bytes @ 0x2
   521                           
   522                           
   523                           ; 1 bytes @ 0x2
   524  0072                     	ds	2
   525  0074                     ___lmul@multiplicand:
   526                           
   527                           ; 4 bytes @ 0x4
   528  0074                     	ds	4
   529  0078                     ??___lmul:
   530                           
   531                           ; 1 bytes @ 0x8
   532  0078                     	ds	1
   533  0079                     ___lmul@product:
   534                           
   535                           ; 4 bytes @ 0x9
   536  0079                     	ds	4
   537  007D                     ??___lldiv:
   538                           
   539                           ; 1 bytes @ 0xD
   540  007D                     	ds	1
   541  007E                     ??_main:
   542                           
   543                           	psect	cstackBANK0
   544  0020                     __pcstackBANK0:	
   545                           ; 1 bytes @ 0xE
   546                           
   547  0020                     ?___lldiv:
   548  0020                     ___lldiv@divisor:	
   549                           ; 4 bytes @ 0x0
   550                           
   551                           
   552                           ; 4 bytes @ 0x0
   553  0020                     	ds	4
   554  0024                     ___lldiv@dividend:
   555                           
   556                           ; 4 bytes @ 0x4
   557  0024                     	ds	4
   558  0028                     ___lldiv@quotient:
   559                           
   560                           ; 4 bytes @ 0x8
   561  0028                     	ds	4
   562  002C                     ___lldiv@counter:
   563                           
   564                           ; 1 bytes @ 0xC
   565  002C                     	ds	1
   566  002D                     ?_i2cInit:
   567  002D                     i2cInit@F:	
   568                           ; 1 bytes @ 0xD
   569                           
   570                           
   571                           ; 4 bytes @ 0xD
   572  002D                     	ds	4
   573  0031                     ??_i2cInit:
   574                           
   575                           ; 1 bytes @ 0x11
   576  0031                     	ds	4
   577                           
   578                           	psect	maintext
   579  06B1                     __pmaintext:	
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 13 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, status,2, status,0, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : B00/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0
   601 ;;      Temps:          0       0       0       0       0
   602 ;;      Totals:         0       0       0       0       0
   603 ;;Total ram usage:        0 bytes
   604 ;; Hardware stack levels required when called: 3
   605 ;; This function calls:
   606 ;;		_delay
   607 ;;		_i2cInit
   608 ;;		_i2cStar
   609 ;;		_i2cStop
   610 ;;		_i2cWrite
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _main
   618  06B1                     _main:
   619  06B1                     l931:	
   620                           ;incstack = 0
   621                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   622                           
   623                           
   624                           ;main.c: 15:     i2c.init(100);
   625  06B1  3000               	movlw	0
   626  06B2  1283               	bcf	3,5	;RP0=0, select bank0
   627  06B3  1303               	bcf	3,6	;RP1=0, select bank0
   628  06B4  00B0               	movwf	i2cInit@F+3
   629  06B5  3000               	movlw	0
   630  06B6  00AF               	movwf	i2cInit@F+2
   631  06B7  3000               	movlw	0
   632  06B8  00AE               	movwf	i2cInit@F+1
   633  06B9  3064               	movlw	100
   634  06BA  00AD               	movwf	i2cInit@F
   635  06BB  0835               	movf	_i2c,w
   636  06BC  120A  118A  2003  120A  118A  	fcall	fptable
   637  06C1                     l9:	
   638                           ;main.c: 17:     while(1)
   639                           
   640                           
   641                           ;main.c: 18:     {;main.c: 19:         i2c.star();
   642  06C1  1283               	bcf	3,5	;RP0=0, select bank0
   643  06C2  1303               	bcf	3,6	;RP1=0, select bank0
   644  06C3  0837               	movf	low ((_i2c| 0+2)),w
   645  06C4  120A  118A  2003  120A  118A  	fcall	fptable
   646                           
   647                           ;main.c: 20:         i2c.write(32);
   648  06C9  3020               	movlw	32
   649  06CA  00F0               	movwf	i2cWrite@dat
   650  06CB  3000               	movlw	0
   651  06CC  00F1               	movwf	i2cWrite@dat+1
   652  06CD  1283               	bcf	3,5	;RP0=0, select bank0
   653  06CE  1303               	bcf	3,6	;RP1=0, select bank0
   654  06CF  0838               	movf	low ((_i2c| 0+3)),w
   655  06D0  120A  118A  2003  120A  118A  	fcall	fptable
   656                           
   657                           ;main.c: 21:         delay(100);
   658  06D5  3064               	movlw	100
   659  06D6  00F0               	movwf	delay@t
   660  06D7  3000               	movlw	0
   661  06D8  00F1               	movwf	delay@t+1
   662  06D9  120A  118A  2680  120A  118A  	fcall	_delay
   663                           
   664                           ;main.c: 22:         i2c.stop();
   665  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   666  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   667  06E0  083C               	movf	low ((_i2c| 0+7)),w
   668  06E1  120A  118A  2003  120A  118A  	fcall	fptable
   669  06E6  2EC1               	goto	l9
   670  06E7  120A  118A  2800   	ljmp	start
   671  06EA                     __end_of_main:
   672                           
   673                           	psect	text1
   674  0696                     __ptext1:	
   675 ;; *************** function _i2cWrite *****************
   676 ;; Defined at:
   677 ;;		line 50 in file "i2c.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  dat             2    0[COMMON] unsigned int 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, pclath, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   691 ;;      Params:         2       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used: 1
   697 ;; Hardware stack levels required when called: 2
   698 ;; This function calls:
   699 ;;		_i2cRestart
   700 ;;		_msspWait
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           
   707                           ;psect for function _i2cWrite
   708  0696                     _i2cWrite:
   709  0696                     l85:	
   710                           ;incstack = 0
   711                           ; Regs used in _i2cWrite: [wreg+status,2+status,0+pclath+cstack]
   712                           ;i2c.c: 50: void i2cWrite (unsigned dat);i2c.c: 51: {;i2c.c: 53:     repeat:
   713                           
   714  0696                     l895:
   715                           
   716                           ;i2c.c: 54:     SSPBUF = dat;
   717  0696  0870               	movf	i2cWrite@dat,w
   718  0697  1283               	bcf	3,5	;RP0=0, select bank0
   719  0698  1303               	bcf	3,6	;RP1=0, select bank0
   720  0699  0093               	movwf	19	;volatile
   721  069A                     l897:
   722                           
   723                           ;i2c.c: 55:     msspWait();
   724  069A  120A  118A  262C  120A  118A  	fcall	_msspWait
   725  069F                     l899:
   726                           
   727                           ;i2c.c: 57:     if(SSPCON2bits.ACKSTAT)
   728  069F  1683               	bsf	3,5	;RP0=1, select bank1
   729  06A0  1303               	bcf	3,6	;RP1=0, select bank1
   730  06A1  1F11               	btfss	17,6	;volatile
   731  06A2  2EA4               	goto	u371
   732  06A3  2EA5               	goto	u370
   733  06A4                     u371:
   734  06A4  2EB0               	goto	l87
   735  06A5                     u370:
   736  06A5                     l901:
   737                           
   738                           ;i2c.c: 58:     {;i2c.c: 59:        i2cRestart();
   739  06A5  120A  118A  2634  120A  118A  	fcall	_i2cRestart
   740                           
   741                           ;i2c.c: 60:        msspWait();
   742  06AA  120A  118A  262C  120A  118A  	fcall	_msspWait
   743                           
   744                           ;i2c.c: 61:        goto repeat ;
   745  06AF  2E96               	goto	l85
   746  06B0                     l87:
   747  06B0  0008               	return
   748  06B1                     __end_of_i2cWrite:
   749                           
   750                           	psect	text2
   751  0634                     __ptext2:	
   752 ;; *************** function _i2cRestart *****************
   753 ;; Defined at:
   754 ;;		line 98 in file "i2c.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		status,2, status,0, pclath, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; Hardware stack levels required when called: 1
   775 ;; This function calls:
   776 ;;		_msspWait
   777 ;; This function is called by:
   778 ;;		_i2cWrite
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _i2cRestart
   784  0634                     _i2cRestart:
   785  0634                     l831:	
   786                           ;incstack = 0
   787                           ; Regs used in _i2cRestart: [status,2+status,0+pclath+cstack]
   788                           
   789                           
   790                           ;i2c.c: 100:     RSEN = 1;
   791  0634  1683               	bsf	3,5	;RP0=1, select bank1
   792  0635  1303               	bcf	3,6	;RP1=0, select bank1
   793  0636  1491               	bsf	17,1	;volatile
   794  0637                     l833:
   795                           
   796                           ;i2c.c: 101:     msspWait();
   797  0637  120A  118A  262C  120A  118A  	fcall	_msspWait
   798  063C                     l109:
   799  063C  0008               	return
   800  063D                     __end_of_i2cRestart:
   801                           
   802                           	psect	text3
   803  0646                     __ptext3:	
   804 ;; *************** function _i2cStop *****************
   805 ;; Defined at:
   806 ;;		line 91 in file "i2c.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		status,2, status,0, pclath, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         0       0       0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used: 1
   826 ;; Hardware stack levels required when called: 1
   827 ;; This function calls:
   828 ;;		_msspWait
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _i2cStop
   836  0646                     _i2cStop:
   837  0646                     l903:	
   838                           ;incstack = 0
   839                           ; Regs used in _i2cStop: [status,2+status,0+pclath+cstack]
   840                           
   841                           
   842                           ;i2c.c: 93:     PEN = 1;
   843  0646  1683               	bsf	3,5	;RP0=1, select bank1
   844  0647  1303               	bcf	3,6	;RP1=0, select bank1
   845  0648  1511               	bsf	17,2	;volatile
   846  0649                     l905:
   847                           
   848                           ;i2c.c: 94:     msspWait();
   849  0649  120A  118A  262C  120A  118A  	fcall	_msspWait
   850  064E                     l907:
   851                           
   852                           ;i2c.c: 95:     SSPEN = 0;
   853  064E  1283               	bcf	3,5	;RP0=0, select bank0
   854  064F  1303               	bcf	3,6	;RP1=0, select bank0
   855  0650  1294               	bcf	20,5	;volatile
   856  0651                     l106:
   857  0651  0008               	return
   858  0652                     __end_of_i2cStop:
   859                           
   860                           	psect	text4
   861  065F                     __ptext4:	
   862 ;; *************** function _i2cStar *****************
   863 ;; Defined at:
   864 ;;		line 43 in file "i2c.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, pclath, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; Hardware stack levels required when called: 1
   885 ;; This function calls:
   886 ;;		_i2cIdleWait
   887 ;;		_msspWait
   888 ;; This function is called by:
   889 ;;		_main
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _i2cStar
   895  065F                     _i2cStar:
   896  065F                     l889:	
   897                           ;incstack = 0
   898                           ; Regs used in _i2cStar: [wreg+status,2+status,0+pclath+cstack]
   899                           
   900                           
   901                           ;i2c.c: 45:     i2cIdleWait();
   902  065F  120A  118A  2652  120A  118A  	fcall	_i2cIdleWait
   903  0664                     l891:
   904                           
   905                           ;i2c.c: 46:     SEN = 1;
   906  0664  1683               	bsf	3,5	;RP0=1, select bank1
   907  0665  1303               	bcf	3,6	;RP1=0, select bank1
   908  0666  1411               	bsf	17,0	;volatile
   909  0667                     l893:
   910                           
   911                           ;i2c.c: 47:     msspWait();
   912  0667  120A  118A  262C  120A  118A  	fcall	_msspWait
   913  066C                     l82:
   914  066C  0008               	return
   915  066D                     __end_of_i2cStar:
   916                           
   917                           	psect	text5
   918  062C                     __ptext5:	
   919 ;; *************** function _msspWait *****************
   920 ;; Defined at:
   921 ;;		line 37 in file "i2c.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;		None
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		None
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         0       0       0       0       0
   936 ;;      Locals:         0       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0
   938 ;;      Totals:         0       0       0       0       0
   939 ;;Total ram usage:        0 bytes
   940 ;; Hardware stack levels used: 1
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_i2cStar
   945 ;;		_i2cWrite
   946 ;;		_i2cStop
   947 ;;		_i2cRestart
   948 ;;		_i2cAck
   949 ;;		_i2cNack
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           
   954                           ;psect for function _msspWait
   955  062C                     _msspWait:
   956  062C                     l823:	
   957                           ;incstack = 0
   958                           ; Regs used in _msspWait: []
   959                           
   960  062C                     l76:	
   961                           ;i2c.c: 39:     while(!SSPIF);
   962                           
   963  062C  1283               	bcf	3,5	;RP0=0, select bank0
   964  062D  1303               	bcf	3,6	;RP1=0, select bank0
   965  062E  1D8C               	btfss	12,3	;volatile
   966  062F  2E31               	goto	u201
   967  0630  2E32               	goto	u200
   968  0631                     u201:
   969  0631  2E2C               	goto	l76
   970  0632                     u200:
   971  0632                     l78:
   972                           
   973                           ;i2c.c: 40:     SSPIF = 0;
   974  0632  118C               	bcf	12,3	;volatile
   975  0633                     l79:
   976  0633  0008               	return
   977  0634                     __end_of_msspWait:
   978                           
   979                           	psect	text6
   980  0652                     __ptext6:	
   981 ;; *************** function _i2cIdleWait *****************
   982 ;; Defined at:
   983 ;;		line 32 in file "i2c.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_i2cStar
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _i2cIdleWait
  1012  0652                     _i2cIdleWait:
  1013  0652                     l825:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _i2cIdleWait: [wreg+status,2]
  1016                           
  1017  0652                     l827:	
  1018                           ;i2c.c: 34:     while( ( SSPCON2 & 0x1F || SSPSTAT & 0x04 ) );
  1019                           
  1020  0652  1683               	bsf	3,5	;RP0=1, select bank1
  1021  0653  1303               	bcf	3,6	;RP1=0, select bank1
  1022  0654  0811               	movf	17,w	;volatile
  1023  0655  391F               	andlw	31
  1024  0656  1D03               	btfss	3,2
  1025  0657  2E59               	goto	u211
  1026  0658  2E5A               	goto	u210
  1027  0659                     u211:
  1028  0659  2E52               	goto	l827
  1029  065A                     u210:
  1030  065A                     l829:
  1031  065A  1914               	btfsc	20,2	;volatile
  1032  065B  2E5D               	goto	u221
  1033  065C  2E5E               	goto	u220
  1034  065D                     u221:
  1035  065D  2E52               	goto	l827
  1036  065E                     u220:
  1037  065E                     l73:
  1038  065E  0008               	return
  1039  065F                     __end_of_i2cIdleWait:
  1040                           
  1041                           	psect	text7
  1042  0730                     __ptext7:	
  1043 ;; *************** function _i2cInit *****************
  1044 ;; Defined at:
  1045 ;;		line 21 in file "i2c.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  F               4   13[BANK0 ] unsigned long 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;		None
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, pclath, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1059 ;;      Params:         0       4       0       0       0
  1060 ;;      Locals:         0       0       0       0       0
  1061 ;;      Temps:          0       4       0       0       0
  1062 ;;      Totals:         0       8       0       0       0
  1063 ;;Total ram usage:        8 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 1
  1066 ;; This function calls:
  1067 ;;		___lldiv
  1068 ;;		___lmul
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _i2cInit
  1076  0730                     _i2cInit:
  1077  0730                     l879:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _i2cInit: [wreg+status,2+status,0+pclath+cstack]
  1080                           
  1081                           
  1082                           ;i2c.c: 21: void i2cInit (unsigned long F);i2c.c: 22: {;i2c.c: 23:     TRISCbits.TRISC3 
      +                          = 1;
  1083  0730  1683               	bsf	3,5	;RP0=1, select bank1
  1084  0731  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0732  1587               	bsf	7,3	;volatile
  1086                           
  1087                           ;i2c.c: 24:     TRISCbits.TRISC4 = 1;
  1088  0733  1607               	bsf	7,4	;volatile
  1089                           
  1090                           ;i2c.c: 25:     SSPCONbits.SSPEN = 1;
  1091  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0736  1694               	bsf	20,5	;volatile
  1094  0737                     l881:
  1095                           
  1096                           ;i2c.c: 26:     SSPCONbits.SSPM = 0x08;
  1097  0737  0814               	movf	20,w	;volatile
  1098  0738  39F0               	andlw	-16
  1099  0739  3808               	iorlw	8
  1100  073A  0094               	movwf	20	;volatile
  1101  073B                     l883:
  1102                           
  1103                           ;i2c.c: 27:     SSPCON2 = 0;
  1104  073B  1683               	bsf	3,5	;RP0=1, select bank1
  1105  073C  1303               	bcf	3,6	;RP1=0, select bank1
  1106  073D  0191               	clrf	17	;volatile
  1107  073E                     l885:
  1108                           
  1109                           ;i2c.c: 28:     SSPADD = (20000000/(4*F*100))-1;
  1110  073E  1283               	bcf	3,5	;RP0=0, select bank0
  1111  073F  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0740  082D               	movf	i2cInit@F,w
  1113  0741  00B1               	movwf	??_i2cInit
  1114  0742  082E               	movf	i2cInit@F+1,w
  1115  0743  00B2               	movwf	??_i2cInit+1
  1116  0744  082F               	movf	i2cInit@F+2,w
  1117  0745  00B3               	movwf	??_i2cInit+2
  1118  0746  0830               	movf	i2cInit@F+3,w
  1119  0747  00B4               	movwf	??_i2cInit+3
  1120  0748  3002               	movlw	2
  1121  0749                     u365:
  1122  0749  1003               	clrc
  1123  074A  0DB1               	rlf	??_i2cInit,f
  1124  074B  0DB2               	rlf	??_i2cInit+1,f
  1125  074C  0DB3               	rlf	??_i2cInit+2,f
  1126  074D  0DB4               	rlf	??_i2cInit+3,f
  1127  074E                     u360:
  1128  074E  3EFF               	addlw	-1
  1129  074F  1D03               	skipz
  1130  0750  2F49               	goto	u365
  1131  0751  0834               	movf	??_i2cInit+3,w
  1132  0752  00F3               	movwf	___lmul@multiplier+3
  1133  0753  0833               	movf	??_i2cInit+2,w
  1134  0754  00F2               	movwf	___lmul@multiplier+2
  1135  0755  0832               	movf	??_i2cInit+1,w
  1136  0756  00F1               	movwf	___lmul@multiplier+1
  1137  0757  0831               	movf	??_i2cInit,w
  1138  0758  00F0               	movwf	___lmul@multiplier
  1139  0759  3000               	movlw	0
  1140  075A  00F7               	movwf	___lmul@multiplicand+3
  1141  075B  3000               	movlw	0
  1142  075C  00F6               	movwf	___lmul@multiplicand+2
  1143  075D  3000               	movlw	0
  1144  075E  00F5               	movwf	___lmul@multiplicand+1
  1145  075F  3064               	movlw	100
  1146  0760  00F4               	movwf	___lmul@multiplicand
  1147  0761  120A  118A  26EA  120A  118A  	fcall	___lmul
  1148  0766  0873               	movf	?___lmul+3,w
  1149  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0769  00A3               	movwf	___lldiv@divisor+3
  1152  076A  0872               	movf	?___lmul+2,w
  1153  076B  00A2               	movwf	___lldiv@divisor+2
  1154  076C  0871               	movf	?___lmul+1,w
  1155  076D  00A1               	movwf	___lldiv@divisor+1
  1156  076E  0870               	movf	?___lmul,w
  1157  076F  00A0               	movwf	___lldiv@divisor
  1158  0770  3001               	movlw	1
  1159  0771  00A7               	movwf	___lldiv@dividend+3
  1160  0772  3031               	movlw	49
  1161  0773  00A6               	movwf	___lldiv@dividend+2
  1162  0774  302D               	movlw	45
  1163  0775  00A5               	movwf	___lldiv@dividend+1
  1164  0776  3000               	movlw	0
  1165  0777  00A4               	movwf	___lldiv@dividend
  1166  0778  120A  118A  2786  120A  118A  	fcall	___lldiv
  1167  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1168  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1169  077F  0820               	movf	?___lldiv,w
  1170  0780  3EFF               	addlw	255
  1171  0781  1683               	bsf	3,5	;RP0=1, select bank1
  1172  0782  1303               	bcf	3,6	;RP1=0, select bank1
  1173  0783  0093               	movwf	19	;volatile
  1174  0784                     l887:
  1175                           
  1176                           ;i2c.c: 29:     SSPSTAT = 0;
  1177  0784  0194               	clrf	20	;volatile
  1178  0785                     l67:
  1179  0785  0008               	return
  1180  0786                     __end_of_i2cInit:
  1181                           
  1182                           	psect	text8
  1183  06EA                     __ptext8:	
  1184 ;; *************** function ___lmul *****************
  1185 ;; Defined at:
  1186 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  multiplier      4    0[COMMON] unsigned long 
  1189 ;;  multiplicand    4    4[COMMON] unsigned long 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  product         4    9[COMMON] unsigned long 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  4    0[COMMON] unsigned long 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1201 ;;      Params:         8       0       0       0       0
  1202 ;;      Locals:         4       0       0       0       0
  1203 ;;      Temps:          1       0       0       0       0
  1204 ;;      Totals:        13       0       0       0       0
  1205 ;;Total ram usage:       13 bytes
  1206 ;; Hardware stack levels used: 1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_i2cInit
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           
  1215                           ;psect for function ___lmul
  1216  06EA                     ___lmul:
  1217  06EA                     l835:	
  1218                           ;incstack = 0
  1219                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1220                           
  1221  06EA  3000               	movlw	0
  1222  06EB  00FC               	movwf	___lmul@product+3
  1223  06EC  3000               	movlw	0
  1224  06ED  00FB               	movwf	___lmul@product+2
  1225  06EE  3000               	movlw	0
  1226  06EF  00FA               	movwf	___lmul@product+1
  1227  06F0  3000               	movlw	0
  1228  06F1  00F9               	movwf	___lmul@product
  1229  06F2                     l837:
  1230  06F2  1C70               	btfss	___lmul@multiplier,0
  1231  06F3  2EF5               	goto	u231
  1232  06F4  2EF6               	goto	u230
  1233  06F5                     u231:
  1234  06F5  2F0D               	goto	l841
  1235  06F6                     u230:
  1236  06F6                     l839:
  1237  06F6  0874               	movf	___lmul@multiplicand,w
  1238  06F7  07F9               	addwf	___lmul@product,f
  1239  06F8  0875               	movf	___lmul@multiplicand+1,w
  1240  06F9  1103               	clrz
  1241  06FA  1803               	skipnc
  1242  06FB  3E01               	addlw	1
  1243  06FC  1903               	skipnz
  1244  06FD  2EFF               	goto	u241
  1245  06FE  07FA               	addwf	___lmul@product+1,f
  1246  06FF                     u241:
  1247  06FF  0876               	movf	___lmul@multiplicand+2,w
  1248  0700  1103               	clrz
  1249  0701  1803               	skipnc
  1250  0702  3E01               	addlw	1
  1251  0703  1903               	skipnz
  1252  0704  2F06               	goto	u242
  1253  0705  07FB               	addwf	___lmul@product+2,f
  1254  0706                     u242:
  1255  0706  0877               	movf	___lmul@multiplicand+3,w
  1256  0707  1103               	clrz
  1257  0708  1803               	skipnc
  1258  0709  3E01               	addlw	1
  1259  070A  1903               	skipnz
  1260  070B  2F0D               	goto	u243
  1261  070C  07FC               	addwf	___lmul@product+3,f
  1262  070D                     u243:
  1263  070D                     l841:
  1264  070D  3001               	movlw	1
  1265  070E  00F8               	movwf	??___lmul
  1266  070F                     u255:
  1267  070F  1003               	clrc
  1268  0710  0DF4               	rlf	___lmul@multiplicand,f
  1269  0711  0DF5               	rlf	___lmul@multiplicand+1,f
  1270  0712  0DF6               	rlf	___lmul@multiplicand+2,f
  1271  0713  0DF7               	rlf	___lmul@multiplicand+3,f
  1272  0714  0BF8               	decfsz	??___lmul,f
  1273  0715  2F0F               	goto	u255
  1274  0716                     l843:
  1275  0716  3001               	movlw	1
  1276  0717                     u265:
  1277  0717  1003               	clrc
  1278  0718  0CF3               	rrf	___lmul@multiplier+3,f
  1279  0719  0CF2               	rrf	___lmul@multiplier+2,f
  1280  071A  0CF1               	rrf	___lmul@multiplier+1,f
  1281  071B  0CF0               	rrf	___lmul@multiplier,f
  1282  071C  3EFF               	addlw	-1
  1283  071D  1D03               	skipz
  1284  071E  2F17               	goto	u265
  1285  071F  0873               	movf	___lmul@multiplier+3,w
  1286  0720  0472               	iorwf	___lmul@multiplier+2,w
  1287  0721  0471               	iorwf	___lmul@multiplier+1,w
  1288  0722  0470               	iorwf	___lmul@multiplier,w
  1289  0723  1D03               	skipz
  1290  0724  2F26               	goto	u271
  1291  0725  2F27               	goto	u270
  1292  0726                     u271:
  1293  0726  2EF2               	goto	l837
  1294  0727                     u270:
  1295  0727                     l845:
  1296  0727  087C               	movf	___lmul@product+3,w
  1297  0728  00F3               	movwf	?___lmul+3
  1298  0729  087B               	movf	___lmul@product+2,w
  1299  072A  00F2               	movwf	?___lmul+2
  1300  072B  087A               	movf	___lmul@product+1,w
  1301  072C  00F1               	movwf	?___lmul+1
  1302  072D  0879               	movf	___lmul@product,w
  1303  072E  00F0               	movwf	?___lmul
  1304  072F                     l217:
  1305  072F  0008               	return
  1306  0730                     __end_of___lmul:
  1307                           
  1308                           	psect	text9
  1309  0786                     __ptext9:	
  1310 ;; *************** function ___lldiv *****************
  1311 ;; Defined at:
  1312 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  divisor         4    0[BANK0 ] unsigned long 
  1315 ;;  dividend        4    4[BANK0 ] unsigned long 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  quotient        4    8[BANK0 ] unsigned long 
  1318 ;;  counter         1   12[BANK0 ] unsigned char 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  4    0[BANK0 ] unsigned long 
  1321 ;; Registers used:
  1322 ;;		wreg, status,2, status,0
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       8       0       0       0
  1329 ;;      Locals:         0       5       0       0       0
  1330 ;;      Temps:          1       0       0       0       0
  1331 ;;      Totals:         1      13       0       0       0
  1332 ;;Total ram usage:       14 bytes
  1333 ;; Hardware stack levels used: 1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_i2cInit
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function ___lldiv
  1343  0786                     ___lldiv:
  1344  0786                     l849:	
  1345                           ;incstack = 0
  1346                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1347                           
  1348  0786  3000               	movlw	0
  1349  0787  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0788  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0789  00AB               	movwf	___lldiv@quotient+3
  1352  078A  3000               	movlw	0
  1353  078B  00AA               	movwf	___lldiv@quotient+2
  1354  078C  3000               	movlw	0
  1355  078D  00A9               	movwf	___lldiv@quotient+1
  1356  078E  3000               	movlw	0
  1357  078F  00A8               	movwf	___lldiv@quotient
  1358  0790  0823               	movf	___lldiv@divisor+3,w
  1359  0791  0422               	iorwf	___lldiv@divisor+2,w
  1360  0792  0421               	iorwf	___lldiv@divisor+1,w
  1361  0793  0420               	iorwf	___lldiv@divisor,w
  1362  0794  1903               	skipnz
  1363  0795  2F97               	goto	u281
  1364  0796  2F98               	goto	u280
  1365  0797                     u281:
  1366  0797  2FE5               	goto	l869
  1367  0798                     u280:
  1368  0798                     l851:
  1369  0798  01AC               	clrf	___lldiv@counter
  1370  0799  0AAC               	incf	___lldiv@counter,f
  1371  079A  2FA8               	goto	l855
  1372  079B                     l853:
  1373  079B  3001               	movlw	1
  1374  079C  00FD               	movwf	??___lldiv
  1375  079D                     u295:
  1376  079D  1003               	clrc
  1377  079E  0DA0               	rlf	___lldiv@divisor,f
  1378  079F  0DA1               	rlf	___lldiv@divisor+1,f
  1379  07A0  0DA2               	rlf	___lldiv@divisor+2,f
  1380  07A1  0DA3               	rlf	___lldiv@divisor+3,f
  1381  07A2  0BFD               	decfsz	??___lldiv,f
  1382  07A3  2F9D               	goto	u295
  1383  07A4  3001               	movlw	1
  1384  07A5  00FD               	movwf	??___lldiv
  1385  07A6  087D               	movf	??___lldiv,w
  1386  07A7  07AC               	addwf	___lldiv@counter,f
  1387  07A8                     l855:
  1388  07A8  1FA3               	btfss	___lldiv@divisor+3,7
  1389  07A9  2FAB               	goto	u301
  1390  07AA  2FAC               	goto	u300
  1391  07AB                     u301:
  1392  07AB  2F9B               	goto	l853
  1393  07AC                     u300:
  1394  07AC                     l857:
  1395  07AC  3001               	movlw	1
  1396  07AD  00FD               	movwf	??___lldiv
  1397  07AE                     u315:
  1398  07AE  1003               	clrc
  1399  07AF  0DA8               	rlf	___lldiv@quotient,f
  1400  07B0  0DA9               	rlf	___lldiv@quotient+1,f
  1401  07B1  0DAA               	rlf	___lldiv@quotient+2,f
  1402  07B2  0DAB               	rlf	___lldiv@quotient+3,f
  1403  07B3  0BFD               	decfsz	??___lldiv,f
  1404  07B4  2FAE               	goto	u315
  1405  07B5                     l859:
  1406  07B5  0823               	movf	___lldiv@divisor+3,w
  1407  07B6  0227               	subwf	___lldiv@dividend+3,w
  1408  07B7  1D03               	skipz
  1409  07B8  2FC3               	goto	u325
  1410  07B9  0822               	movf	___lldiv@divisor+2,w
  1411  07BA  0226               	subwf	___lldiv@dividend+2,w
  1412  07BB  1D03               	skipz
  1413  07BC  2FC3               	goto	u325
  1414  07BD  0821               	movf	___lldiv@divisor+1,w
  1415  07BE  0225               	subwf	___lldiv@dividend+1,w
  1416  07BF  1D03               	skipz
  1417  07C0  2FC3               	goto	u325
  1418  07C1  0820               	movf	___lldiv@divisor,w
  1419  07C2  0224               	subwf	___lldiv@dividend,w
  1420  07C3                     u325:
  1421  07C3  1C03               	skipc
  1422  07C4  2FC6               	goto	u321
  1423  07C5  2FC7               	goto	u320
  1424  07C6                     u321:
  1425  07C6  2FD6               	goto	l865
  1426  07C7                     u320:
  1427  07C7                     l861:
  1428  07C7  0820               	movf	___lldiv@divisor,w
  1429  07C8  02A4               	subwf	___lldiv@dividend,f
  1430  07C9  0821               	movf	___lldiv@divisor+1,w
  1431  07CA  1C03               	skipc
  1432  07CB  0F21               	incfsz	___lldiv@divisor+1,w
  1433  07CC  02A5               	subwf	___lldiv@dividend+1,f
  1434  07CD  0822               	movf	___lldiv@divisor+2,w
  1435  07CE  1C03               	skipc
  1436  07CF  0F22               	incfsz	___lldiv@divisor+2,w
  1437  07D0  02A6               	subwf	___lldiv@dividend+2,f
  1438  07D1  0823               	movf	___lldiv@divisor+3,w
  1439  07D2  1C03               	skipc
  1440  07D3  0F23               	incfsz	___lldiv@divisor+3,w
  1441  07D4  02A7               	subwf	___lldiv@dividend+3,f
  1442  07D5                     l863:
  1443  07D5  1428               	bsf	___lldiv@quotient,0
  1444  07D6                     l865:
  1445  07D6  3001               	movlw	1
  1446  07D7                     u335:
  1447  07D7  1003               	clrc
  1448  07D8  0CA3               	rrf	___lldiv@divisor+3,f
  1449  07D9  0CA2               	rrf	___lldiv@divisor+2,f
  1450  07DA  0CA1               	rrf	___lldiv@divisor+1,f
  1451  07DB  0CA0               	rrf	___lldiv@divisor,f
  1452  07DC  3EFF               	addlw	-1
  1453  07DD  1D03               	skipz
  1454  07DE  2FD7               	goto	u335
  1455  07DF                     l867:
  1456  07DF  3001               	movlw	1
  1457  07E0  02AC               	subwf	___lldiv@counter,f
  1458  07E1  1D03               	btfss	3,2
  1459  07E2  2FE4               	goto	u341
  1460  07E3  2FE5               	goto	u340
  1461  07E4                     u341:
  1462  07E4  2FAC               	goto	l857
  1463  07E5                     u340:
  1464  07E5                     l869:
  1465  07E5  082B               	movf	___lldiv@quotient+3,w
  1466  07E6  00A3               	movwf	?___lldiv+3
  1467  07E7  082A               	movf	___lldiv@quotient+2,w
  1468  07E8  00A2               	movwf	?___lldiv+2
  1469  07E9  0829               	movf	___lldiv@quotient+1,w
  1470  07EA  00A1               	movwf	?___lldiv+1
  1471  07EB  0828               	movf	___lldiv@quotient,w
  1472  07EC  00A0               	movwf	?___lldiv
  1473  07ED                     l239:
  1474  07ED  0008               	return
  1475  07EE                     __end_of___lldiv:
  1476                           
  1477                           	psect	text10
  1478  0680                     __ptext10:	
  1479 ;; *************** function _delay *****************
  1480 ;; Defined at:
  1481 ;;		line 12 in file "delay.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  t               2    0[COMMON] unsigned int 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1495 ;;      Params:         2       0       0       0       0
  1496 ;;      Locals:         0       0       0       0       0
  1497 ;;      Temps:          2       0       0       0       0
  1498 ;;      Totals:         4       0       0       0       0
  1499 ;;Total ram usage:        4 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _delay
  1510  0680                     _delay:
  1511  0680                     l873:	
  1512                           ;incstack = 0
  1513                           ; Regs used in _delay: [wreg+status,2+status,0]
  1514                           
  1515                           
  1516                           ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  1517  0680  2E8F               	goto	l877
  1518  0681                     l875:
  1519                           
  1520                           ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(20000000/4000.0)));
  1521  0681  3007               	movlw	7
  1522  0682  00F3               	movwf	??_delay+1
  1523  0683  307D               	movlw	125
  1524  0684  00F2               	movwf	??_delay
  1525  0685                     u397:
  1526  0685  0BF2               	decfsz	??_delay,f
  1527  0686  2E85               	goto	u397
  1528  0687  0BF3               	decfsz	??_delay+1,f
  1529  0688  2E85               	goto	u397
  1530                           
  1531                           ;delay.c: 17:         --t;
  1532  0689  3001               	movlw	1
  1533  068A  02F0               	subwf	delay@t,f
  1534  068B  3000               	movlw	0
  1535  068C  1C03               	skipc
  1536  068D  03F1               	decf	delay@t+1,f
  1537  068E  02F1               	subwf	delay@t+1,f
  1538  068F                     l877:
  1539                           
  1540                           ;delay.c: 14:     while( t )
  1541  068F  0870               	movf	delay@t,w
  1542  0690  0471               	iorwf	delay@t+1,w
  1543  0691  1D03               	btfss	3,2
  1544  0692  2E94               	goto	u351
  1545  0693  2E95               	goto	u350
  1546  0694                     u351:
  1547  0694  2E81               	goto	l875
  1548  0695                     u350:
  1549  0695                     l117:
  1550  0695  0008               	return
  1551  0696                     __end_of_delay:
  1552  000C                     
  1553                           	psect	functab
  1554  0003                     __pfunctab:
  1555  0003                     __fptable:
  1556  0003                     fptable:
  1557  0003  00FF               	movwf	(btemp+1)& (0+127)
  1558  0004  3000               	movlw	high fptable
  1559  0005  008A               	movwf	10
  1560  0006  087F               	movf	(btemp+1)& (0+127),w
  1561  0007  0782               	addwf	2,f
  1562  0008                     fpbase:
  1563  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  1564  0009                     fp__i2cInit:
  1565  0009  120A  118A  2F30   	ljmp	_i2cInit
  1566  000C                     fp__msspWait:
  1567  000C                     entry__msspWait:
  1568  000C  120A  118A  2E2C   	ljmp	_msspWait
  1569  000F                     fp__i2cStar:
  1570  000F  120A  118A  2E5F   	ljmp	_i2cStar
  1571  0012                     fp__i2cStop:
  1572  0012  120A  118A  2E46   	ljmp	_i2cStop
  1573  0015                     fp__i2cRestart:
  1574  0015                     entry__i2cRestart:
  1575  0015  120A  118A  2E34   	ljmp	_i2cRestart
  1576  0018                     fp__i2cWrite:
  1577  0018  120A  118A  2E96   	ljmp	_i2cWrite
  1578  001B                     __end_of__fptable:
  1579  007E                     btemp	set	126	;btemp
  1580  007E                     wtemp0	set	126
  1581                           
  1582                           	psect	config
  1583                           
  1584                           ;Config register CONFIG1 @ 0x2007
  1585                           ;	Oscillator Selection bits
  1586                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1587                           ;	Watchdog Timer Enable bit
  1588                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1589                           ;	Power-up Timer Enable bit
  1590                           ;	PWRTE = OFF, PWRT disabled
  1591                           ;	RE3/MCLR pin function select bit
  1592                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1593                           ;	Code Protection bit
  1594                           ;	CP = OFF, Program memory code protection is disabled
  1595                           ;	Data Code Protection bit
  1596                           ;	CPD = OFF, Data memory code protection is disabled
  1597                           ;	Brown Out Reset Selection bits
  1598                           ;	BOREN = OFF, BOR disabled
  1599                           ;	Internal External Switchover bit
  1600                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1601                           ;	Fail-Safe Clock Monitor Enabled bit
  1602                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1603                           ;	Low Voltage Programming Enable bit
  1604                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1605                           ;	In-Circuit Debugger Mode bit
  1606                           ;	DEBUG = 0x1, unprogrammed default
  1607  2007                     	org	8199
  1608  2007  20D4               	dw	8404
  1609                           
  1610                           ;Config register CONFIG2 @ 0x2008
  1611                           ;	Brown-out Reset Selection bit
  1612                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1613                           ;	Flash Program Memory Self Write Enable bits
  1614                           ;	WRT = OFF, Write protection off
  1615  2008                     	org	8200
  1616  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        9
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S31i2cT$restart	PTR FTN()void  size(1) Largest target is 1
		 -> i2cRestart(), 

    i2c.restart	PTR FTN()void  size(1) Largest target is 1
		 -> i2cRestart(), 

    S31i2cT$stop	PTR FTN()void  size(1) Largest target is 1
		 -> i2cStop(), 

    i2c.stop	PTR FTN()void  size(1) Largest target is 1
		 -> i2cStop(), 

    S31i2cT$Nack	PTR FTN()void  size(1) Largest target is 1
		 -> i2cNack(), 

    i2c.Nack	PTR FTN()void  size(1) Largest target is 1
		 -> i2cNack(), 

    S31i2cT$ack	PTR FTN()void  size(1) Largest target is 1
		 -> i2cAck(), 

    i2c.ack	PTR FTN()void  size(1) Largest target is 1
		 -> i2cAck(), 

    S31i2cT$read	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> i2cRead(), 

    i2c.read	PTR FTN(unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> i2cRead(), 

    S31i2cT$write	PTR FTN(unsigned int ,)void  size(1) Largest target is 1
		 -> i2cWrite(), 

    i2c.write	PTR FTN(unsigned int ,)void  size(1) Largest target is 1
		 -> i2cWrite(), 

    S31i2cT$star	PTR FTN()void  size(1) Largest target is 1
		 -> i2cStar(), 

    i2c.star	PTR FTN()void  size(1) Largest target is 1
		 -> i2cStar(), 

    S31i2cT$wait	PTR FTN()void  size(1) Largest target is 1
		 -> msspWait(), 

    i2c.wait	PTR FTN()void  size(1) Largest target is 1
		 -> msspWait(), 

    S31i2cT$init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> i2cInit(), 

    i2c.init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> i2cInit(), 


Critical Paths under _main in COMMON

    _i2cInit->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_i2cInit
    _i2cInit->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     807
                              _delay
                            _i2cInit *
                            _i2cStar *
                            _i2cStop *
                           _i2cWrite *
 ---------------------------------------------------------------------------------
 (1) _i2cWrite                                             2     0      2      75
                                              0 COMMON     2     0      2
                         _i2cRestart
                           _msspWait
 ---------------------------------------------------------------------------------
 (2) _i2cRestart                                           0     0      0       0
                           _msspWait
 ---------------------------------------------------------------------------------
 (1) _i2cStop                                              0     0      0       0
                           _msspWait
 ---------------------------------------------------------------------------------
 (1) _i2cStar                                              0     0      0       0
                        _i2cIdleWait
                           _msspWait
 ---------------------------------------------------------------------------------
 (2) _msspWait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cIdleWait                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2cInit                                              8     4      4     633
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     2      2      99
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay
   _i2cInit *
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _i2cStar *
     _i2cIdleWait
     _msspWait
   _i2cStop *
     _msspWait
   _i2cWrite *
     _i2cRestart
       _msspWait
     _msspWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 18 00:43:32 2021

          ??_i2cIdleWait 0070                        l9 06C1                        pc 0002  
            _SSPSTATbits 0094                       l73 065E                       l82 066C  
                     l67 0785                       l76 062C                       l85 0696  
                     l78 0632                       l79 0633                       l87 06B0  
                     fsr 0004                      l106 0651                      l117 0695  
                    l109 063C                      l217 072F                      l239 07ED  
                    l901 06A5                      l823 062C                      l903 0646  
                    l831 0634                      l841 070D                      l825 0652  
                    l905 0649                      l833 0637                      l851 0798  
                    l843 0716                      l835 06EA                      l827 0652  
                    l907 064E                      l931 06B1                      l861 07C7  
                    l853 079B                      l845 0727                      l837 06F2  
                    l829 065A                      l863 07D5                      l855 07A8  
                    l839 06F6                      l873 0680                      l865 07D6  
                    l857 07AC                      l849 0786                      l881 0737  
                    l875 0681                      l867 07DF                      l859 07B5  
                    l883 073B                      l891 0664                      l877 068F  
                    l869 07E5                      l885 073E                      l893 0667  
                    l887 0784                      l879 0730                      l895 0696  
                    l889 065F                      l897 069A                      l899 069F  
                    u200 0632                      u201 0631                      u210 065A  
                    u211 0659                      u300 07AC                      u220 065E  
                    u301 07AB                      u221 065D                      u230 06F6  
                    u231 06F5              fp__msspWait 000C                      u320 07C7  
                    u321 07C6                      u241 06FF                      u242 0706  
                    u315 07AE                      u243 070D                      u340 07E5  
                    u341 07E4                      u325 07C3                      u350 0695  
                    u270 0727                      u351 0694                      u335 07D7  
                    u271 0726                      u255 070F                      u280 0798  
                    u360 074E                      _PEN 048A                      u281 0797  
                    u265 0717                      u370 06A5                      u371 06A4  
                    u365 0749                      u295 079D                      _SEN 0488  
                    u397 0685                      _i2c 0035                      indf 0000  
                   _RCEN 048B                     _RSEN 0489                     _main 06B1  
                   btemp 007E                     start 0000          __end_of_i2cInit 0786  
            i2cWrite@dat 0070          __end_of_i2cStar 066D          __end_of_i2cStop 0652  
                  ?_main 0070                    _ACKEN 048C                    _ACKDT 048D  
    __end_of_i2cIdleWait 065F          __end_of___lldiv 07EE                    _SSPIF 0063  
                  _SSPEN 00A5      ___lmul@multiplicand 0074                    _delay 0680  
                  fpbase 0008                    pclath 000A               _i2cRestart 0634  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 06EA         __end_of_i2cWrite 06B1                   ??_main 007E  
                 ?_delay 0070                   _SSPADD 0093                   _SSPBUF 0013  
       __end_of__fptable 001B                ??_i2cInit 0031                ??_i2cStar 0070  
              ??_i2cStop 0070                   _i2cAck 0000                   ___lmul 06EA  
            _i2cIdleWait 0652                ??___lldiv 007D                   delay@t 0070  
                 fptable 0003                   fptotal 000C         __end_of_msspWait 0634  
            ?_i2cRestart 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
           __pidataBANK0 063D            __end_of_delay 0696                  ??_delay 0072  
              ?_i2cWrite 0070               __pmaintext 06B1                  ?___lmul 0070  
         ___lmul@product 0079      __size_of_i2cRestart 0009                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_i2cWrite 0072         entry__i2cRestart 0015  
                _i2cNack 0000                  _i2cInit 0730                  _i2cRead 0000  
                _i2cStar 065F                  _i2cStop 0646                ?_msspWait 0070  
        __size_of___lmul 0046                  ___lldiv 0786                  __ptext1 0696  
                __ptext2 0634                  __ptext3 0646                  __ptext4 065F  
                __ptext5 062C                  __ptext6 0652                  __ptext7 0730  
                __ptext8 06EA                  __ptext9 0786     end_of_initialization 07FC  
        ___lldiv@divisor 0020          ___lldiv@counter 002C               fp__i2cInit 0009  
             fp__i2cStar 000F               fp__i2cStop 0012               ??_msspWait 0070  
           ?_i2cIdleWait 0070                _TRISCbits 0087             ??_i2cRestart 0070  
         __end_of___lmul 0730       __end_of_i2cRestart 063D      start_initialization 07EE  
      __size_of_i2cWrite 001B                 ??___lmul 0078               init_fetch0 066D  
            __pdataBANK0 0035                ___latbits 0002            __pcstackBANK0 0020  
      __size_of__fptable 0018                 ?_i2cInit 002D                 ?_i2cStar 0070  
               ?_i2cStop 0070                __pfunctab 0003                 ?___lldiv 0020  
      __size_of_msspWait 0008     __size_of_i2cIdleWait 000D           entry__msspWait 000C  
         __size_of_delay 0016            fp__i2cRestart 0015                 i2cInit@F 002D  
      ___lmul@multiplier 0070                 _i2cWrite 0696         __size_of_i2cInit 0056  
       __size_of_i2cStar 000E         __size_of_i2cStop 000C         __size_of___lldiv 0068  
               __fptable 0003                 __ptext10 0680            __size_of_main 0039  
               _msspWait 062C                 init_ram0 0671         ___lldiv@dividend 0024  
            fp__i2cWrite 0018         ___lldiv@quotient 0028              _SSPCON2bits 0091  
             _SSPCONbits 0014  
